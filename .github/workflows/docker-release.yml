name: Build Docker Image

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - 'main'

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get latest release tag
        id: get_release
        run: |
          curl -s https://api.github.com/repos/rhasspy/wyoming-satellite/releases/latest \
            | jq -r '.tag_name' > version.txt
          echo "version=$(cat version.txt)" >> $GITHUB_OUTPUT

      - name: Check if image already exists
        run: |
          if docker manifest inspect lunyaadev/rhasspy-wyoming-satellite:$(cat version.txt) > /dev/null 2>&1; then
            echo "should_continue=false" >> $GITHUB_OUTPUT
          else
            echo "should_continue=true" >> $GITHUB_OUTPUT
          fi

  build:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.should_continue == 'true' || github.event_name == 'push'
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            SATELLITE_VERSION=${{ steps.get_release.outputs.version }}
          tags: |
            lunyaadev/rhasspy-wyoming-satellite:${{ steps.get_release.outputs.version }}
            lunyaadev/rhasspy-wyoming-satellite:latest
